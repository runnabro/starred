.grid-block {
  align-items: stretch;
  display: flex;
  flex: 1 1 auto;
  flex-flow: row nowrap;
  justify-content: flex-start;

  &.noscroll {
    overflow: visible;
  }

  // switch orientation to vertical (defaults to horizontal)
  &.col {
    flex-flow: column nowrap;
  }

  // shrink to only fill space of content (defaults to fill available space)
  &.shrink {
    flex: 0 0 auto;
  }

  &.grow {
    flex: 1 1 100%;
  }

  // alignment of content (defaults to left)
  &.justify-center {
    justify-content: center;
  }

  &.justify-right {
    justify-content: flex-end;
  }

  &.justify-justified {
    justify-content: space-between; // space between blocks is even
  }

  &.justify-spaced {
    justify-content: space-around; // space around blocks is even
  }

  &.align-center {
    align-items: center;
  }

  &.align-start {
    align-items: flex-start;
  }

  &.align-end {
    align-items: flex-end;
  }
}

$size-directions: top right bottom left;
$size-list: xs sm md lg xl;
$sizes: $xs,$sm,$md,$lg,$xl;

// default sizes
@for $i from 1 to 6 {

  // padding
  .padding-#{nth($size-list,$i)} {
    padding: nth($sizes,$i);
  }

  @for $x from 1 to 5 {
    .padding-#{nth($size-directions,$x)}-#{nth($size-list,$i)} {
      padding-#{nth($size-directions,$x)}: nth($sizes,$i);
    }
  }

  // margin
  .margin-#{nth($size-list,$i)} {
    margin: nth($sizes,$i);
  }

  @for $x from 1 to 5 {
    .margin-#{nth($size-directions,$x)}-#{nth($size-list,$i)} {
      margin-#{nth($size-directions,$x)}: nth($sizes,$i);
    }
  }
}
